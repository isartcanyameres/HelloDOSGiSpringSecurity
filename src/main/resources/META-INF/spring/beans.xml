<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security-3.0.xsd
                    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

	<!-- Publish myHelloService using JAX-RS -->
	<jaxrs:server id="myServiceServer" address="/">
		<jaxrs:serviceBeans>
			<beans:ref bean="myHelloService" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<beans:ref bean="authProvider" />
			<beans:ref bean="filterSecurityInterceptor" /> 
		</jaxrs:providers>
	</jaxrs:server>
	<beans:bean id="myHelloService" class="com.mytestcompany.sst.HelloServiceImpl" />

	<beans:bean id="authProvider"
		class="com.mytestcompany.sst.BasicHTTPSpringAuthenticationProvider" />


	<!-- <beans:bean id="myExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter"> 
		<beans:property name="authenticationEntryPoint" ref="http403ForbiddenEntryPoint" 
		/> </beans:bean> <beans:bean id="http403ForbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" 
		/> Puts basic authentication properties in spring SecurityContextHolder <beans:bean 
		id="myBasicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"> 
		<beans:property name="authenticationManager" ref="authenticationManager" 
		/> <beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint" 
		/> </beans:bean> <beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint"> 
		<beans:property name="realmName" value="OpenNaaS Application" /> </beans:bean> 
		<beans:bean id="mySecurityContextHolderAwareRequestFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"> 
		</beans:bean> <beans:bean id="customFilterChain" class="org.springframework.security.web.FilterChainProxy"> 
		<filter-chain-map path-type="ant"> <filter-chain pattern="/**" filters="mySecurityContextHolderAwareRequestFilter, 
		myBasicAuthenticationFilter, myExceptionTranslationFilter" /> </filter-chain-map> 
		</beans:bean> -->
	<!-- Spring Security Context -->

	<!-- To allow standards-based @Secured annotation, enable secured-annotations 
		See Spring Security 3.1 Reference 2.4 Method Security - http://static.springsource.org/spring-security/site/docs/3.1.x/reference/ns-config.html#ns-protect-pointcut 
		- http://static.springsource.org/spring-security/site/docs/3.1.x/reference/appendix-namespace.html#d0e8651 
		See Spring Security 3.1 Referecne 15.1.1 Common Built-In Expressions - http://static.springsource.org/spring-security/site/docs/3.1.x/reference/el-access.html -->
	<global-method-security secured-annotations="enabled" />

	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource">
			<filter-security-metadata-source>
				<intercept-url pattern="/**" access="ROLE_ADMIN" />
			</filter-security-metadata-source>
		</beans:property>
	</beans:bean>

	<!-- Define AccessDesisionManager as UnanimousBased -->
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.UnanimousBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean
					class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service id="userService">
				<user name="rod" password="koala" authorities="ROLE_ADMIN, ROLE_USER" />
				<user name="dianne" password="emu" authorities="ROLE_USER" />
				<user name="scott" password="wombat" authorities="ROLE_USER" />
				<user name="peter" password="opal" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

</beans:beans>